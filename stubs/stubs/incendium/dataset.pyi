from typing import List, Optional

from com.inductiveautomation.ignition.common import Dataset
from incendium.helper.types import AnyStr, DictStringAny

class _NanoXML:
    indent: AnyStr
    root: AnyStr
    def __init__(self, root: AnyStr = ..., indent: AnyStr = ...) -> None: ...
    def add_element(self, name: AnyStr) -> None: ...
    def add_sub_element(self, name: AnyStr, value: AnyStr) -> None: ...
    def close_element(self, name: AnyStr) -> None: ...
    def to_string(self) -> AnyStr: ...

def from_list_of_dicts(list_of_dicts: List[DictStringAny]) -> Dataset: ...
def to_json(dataset: Dataset, root: Optional[AnyStr] = ...) -> AnyStr: ...
def to_jsonobject(dataset: Dataset) -> List[DictStringAny]: ...
def to_xml(
    dataset: Dataset, root: AnyStr = ..., element: AnyStr = ..., indent: AnyStr = ...
) -> AnyStr: ...
